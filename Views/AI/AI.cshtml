@{
    ViewData["Title"] = "Chat Interface";
}

<!DOCTYPE html>
<html>
<head>
    <title>Chat Interface</title>
    <style>
        /* Your CSS styles for the chat interface */
        /* Style the chat container, messages, user input, etc. */
        /* Add your CSS styles here */
    </style>
    <script src="~/js/site.js"></script>
</head>
<body>
    <div class="chat-container">
        <div id="chat-messages">
            <!-- Messages will be displayed here -->
            <div class="chat-message">Welcome to the chat!</div>
        </div>
        <div>
            <input type="text" id="user-input" class="user-input" placeholder="Type your message...">
            <button onclick="sendMessage()">Send</button>
        </div>
    <div class="disclaimer">
        <p style="color: red;">This model is not trained. Responses may vary and are often confusing.</p>
    </div>


    <script>
        async function sendMessage() {
            const userInput = document.getElementById('user-input').value;

            const response = await fetch('/api/chat', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    Content: userInput
                })
            });

            const data = await response.json();
            console.log('Received data:', data);
            displayMessages(data.replies,userInput);
            document.getElementById('user-input').value = ''; // Clear the input field
        }


        function displayMessages(data, userInput) {
            const chatMessages = document.getElementById('chat-messages');
            const replies = data.choices; // Extracting messages from the 'choices' array

            replies.forEach((reply) => {
                const newMessage = document.createElement('div');
                newMessage.classList.add('chat-message');

                const meText = document.createElement('span');
                meText.textContent = `Me: ${userInput}`;
                newMessage.appendChild(meText);

                newMessage.appendChild(document.createElement('br')); // Line break

                const aiText = document.createElement('span');
                aiText.textContent = `AI: ${reply.text}`;
                newMessage.appendChild(aiText);

                chatMessages.appendChild(newMessage);
            });
        }








    </script>
</body>
</html>
